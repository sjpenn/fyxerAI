# FYXERAI-GEDS Agent OS Configuration
# AI-Powered Email Assistant MVP

project:
  name: "FYXERAI-GEDS"
  type: "ai-email-assistant"
  language: "python"
  framework: "django"
  frontend: "htmx-alpine"
  domain: "email-automation"
  version: "1.0.0"

# AI Agent Configuration
agents:
  # Architecture and Design
  architect-reviewer:
    enabled: true
    auto-review: true
    review-triggers: 
      - "model-changes"
      - "api-changes" 
      - "oauth-changes"
      - "email-integration-changes"
    focus-areas:
      - "django-htmx-architecture"
      - "multi-account-patterns"
      - "browser-extension-architecture"
      - "oauth-security"

  # Code Quality and Review
  code-reviewer:
    enabled: true
    auto-review: true
    standards:
      - "django-best-practices"
      - "htmx-patterns"
      - "alpine-js-standards"
      - "email-security"
    review-scope:
      - "oauth-authentication"
      - "email-api-integration"
      - "browser-extension-code"
      - "ai-api-calls"

  # AI Integration Specialist
  ai-engineer:
    enabled: true
    providers:
      - "openai"
    optimize:
      - "prompt-engineering"
      - "token-usage"
      - "response-quality"
      - "cost-efficiency"
    ai-workflows:
      - "email-categorization"
      - "draft-generation"
      - "meeting-summarization"
      - "tone-profile-learning"

  # Security and Compliance
  security-auditor:
    enabled: true
    scan-triggers: 
      - "commit"
      - "oauth-changes"
      - "api-changes"
    checks:
      - "oauth-security"
      - "email-data-protection"
      - "token-encryption"
      - "api-security"
    compliance-standards:
      - "gdpr-compliance"
      - "email-privacy"
      - "data-encryption"

  # Frontend Development
  frontend-developer:
    enabled: true
    frontend-stack:
      - "htmx"
      - "alpine-js"
      - "tailwind-css"
      - "shadcn-ui"
    optimization:
      - "partial-page-updates"
      - "browser-extension-integration"
      - "dashboard-responsiveness"
      - "email-interface-overlay"

  # Backend Architecture
  backend-architect:
    enabled: true
    backend-patterns:
      - "django-oauth"
      - "multi-account-models"
      - "email-api-integration"
      - "async-task-processing"
    api-design:
      - "email-categorization-endpoints"
      - "draft-generation-api"
      - "oauth-callback-handling"
      - "webhook-processing"

  # Performance Optimization
  performance-engineer:
    enabled: true
    monitor:
      - "email-processing-speed"
      - "ai-response-times"
      - "oauth-token-refresh"
      - "browser-extension-performance"
    optimize:
      - "email-categorization-speed"
      - "ai-draft-generation"
      - "multi-account-queries"
      - "background-email-sync"
    thresholds:
      - "email-categorization: 2s"
      - "draft-generation: 5s"
      - "oauth-refresh: 1s"

  # Testing and Quality
  test-automator:
    enabled: true
    test-framework: "pytest"
    coverage-threshold: 85
    auto-generate:
      - "oauth-flow-tests"
      - "email-api-tests"
      - "ai-integration-tests"
      - "browser-extension-tests"
    test-patterns:
      - "django-model-tests"
      - "oauth-security-tests"
      - "email-categorization-tests"
      - "ai-draft-quality-tests"

  # Database Management
  database-optimizer:
    enabled: true
    database-type: "postgresql"
    optimization-focus:
      - "email-query-performance"
      - "multi-account-indexing"
      - "oauth-token-security"
      - "meeting-transcript-storage"

# Development Workflows
workflows:
  development:
    trigger: "on-commit"
    steps:
      - "code-generation"
      - "oauth-security-check"
      - "email-api-validation" 
      - "ai-integration-testing"
      - "browser-extension-testing"
      - "code-review"
  
  feature-development:
    trigger: "feature-branch"
    steps:
      - "requirements-analysis"
      - "email-workflow-design"
      - "oauth-security-review"
      - "ai-integration-planning"
      - "browser-extension-architecture"
  
  deployment:
    trigger: "main-branch"
    steps:
      - "security-audit"
      - "oauth-flow-validation"
      - "email-api-integration-test"
      - "ai-performance-validation"
      - "browser-extension-verification"

  ai-development:
    trigger: "ai-feature"
    steps:
      - "prompt-engineering"
      - "email-context-optimization"
      - "tone-profile-validation"
      - "draft-quality-testing"
      - "cost-optimization"

# Monitoring and Analytics
monitoring:
  performance:
    metrics:
      - "email-categorization-speed"
      - "ai-draft-generation-time"
      - "oauth-token-refresh-rate"
      - "browser-extension-load-time"
    alerts:
      - "email-processing > 2s"
      - "ai-response > 5s"
      - "oauth-failure-rate > 1%"
  
  security:
    metrics:
      - "oauth-authentication-attempts"
      - "email-api-access-patterns"
      - "token-refresh-failures"
    alerts:
      - "oauth-brute-force-detection"
      - "unusual-email-access"
      - "token-encryption-failure"
  
  business:
    metrics:
      - "email-categorization-accuracy"
      - "ai-draft-acceptance-rate"
      - "user-time-saved"
      - "multi-account-usage"
    dashboards:
      - "email-assistant-metrics"
      - "ai-performance-analytics"
      - "user-productivity-gains"

# Project-Specific Configuration
project-context:
  domain-knowledge:
    - "email-protocols"
    - "oauth2-flows"
    - "gmail-api"
    - "outlook-api"
    - "browser-extension-apis"
    - "ai-prompt-engineering"
  
  key-integrations:
    - "google-workspace-api"
    - "microsoft-graph-api"
    - "openai-api"
    - "chrome-extension-api"
    - "outlook-addin-api"
  
  critical-workflows:
    - "multi-account-oauth"
    - "email-categorization"
    - "ai-draft-generation"
    - "browser-extension-integration"
    - "meeting-bot-management"

# Quality Standards
quality-gates:
  code-coverage: 85
  security-score: "A"
  performance-score: 90
  oauth-security-score: 95
  email-privacy-score: 95

# Development Environment
environment:
  python-version: "3.11.4"
  django-version: "4.2"
  database: "postgresql"
  cache: "redis"
  task-queue: "celery"
  deployment: "aws-elastic-beanstalk"

# Custom Prompts and Templates
custom-prompts:
  django-oauth-model:
    template: "prompts/django-oauth.md"
    context: "multi-account-email-integration"
  
  email-api-endpoint:
    template: "prompts/email-api.md"
    context: "gmail-outlook-integration"
  
  ai-integration:
    template: "prompts/ai-email-assistant.md"
    context: "openai-draft-generation"

  browser-extension:
    template: "prompts/extension-development.md"
    context: "gmail-outlook-overlay"

# Documentation Standards
documentation:
  auto-generate:
    - "oauth-flow-documentation"
    - "email-api-documentation"
    - "browser-extension-guides"
    - "ai-integration-docs"
  
  standards:
    - "email-security-documentation"
    - "oauth-compliance-docs"
    - "browser-extension-store-requirements"