# Generated by Django 5.0.14 on 2025-08-20 01:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_premium", models.BooleanField(default=False)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="EmailAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[("gmail", "Gmail"), ("outlook", "Outlook")],
                        max_length=10,
                    ),
                ),
                ("email_address", models.EmailField(max_length=254)),
                ("display_name", models.CharField(blank=True, max_length=255)),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField()),
                ("token_expires_at", models.DateTimeField()),
                ("is_active", models.BooleanField(default=True)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                ("sync_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_id", models.CharField(max_length=255)),
                ("thread_id", models.CharField(blank=True, max_length=255)),
                ("subject", models.TextField()),
                ("sender_email", models.EmailField(max_length=254)),
                ("sender_name", models.CharField(blank=True, max_length=255)),
                ("recipient_emails", models.JSONField(default=list)),
                ("cc_emails", models.JSONField(default=list)),
                ("bcc_emails", models.JSONField(default=list)),
                ("body_text", models.TextField(blank=True)),
                ("body_html", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("urgent", "Urgent"),
                            ("important", "Important"),
                            ("newsletter", "Newsletter"),
                            ("promotion", "Promotion"),
                            ("social", "Social"),
                            ("notification", "Notification"),
                            ("spam", "Spam"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("ai_confidence", models.FloatField(default=0.0)),
                ("manual_override", models.BooleanField(default=False)),
                ("is_read", models.BooleanField(default=False)),
                ("is_starred", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("has_attachments", models.BooleanField(default=False)),
                ("has_draft_reply", models.BooleanField(default=False)),
                ("draft_reply_content", models.TextField(blank=True)),
                ("draft_generated_at", models.DateTimeField(blank=True, null=True)),
                ("received_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="core.emailaccount",
                    ),
                ),
            ],
            options={
                "ordering": ["-received_at"],
            },
        ),
        migrations.CreateModel(
            name="Meeting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("zoom", "Zoom"),
                            ("teams", "Microsoft Teams"),
                            ("meet", "Google Meet"),
                            ("webex", "Cisco Webex"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("meeting_url", models.URLField(blank=True)),
                ("external_meeting_id", models.CharField(blank=True, max_length=255)),
                ("scheduled_start", models.DateTimeField()),
                ("scheduled_end", models.DateTimeField()),
                ("actual_start", models.DateTimeField(blank=True, null=True)),
                ("actual_end", models.DateTimeField(blank=True, null=True)),
                ("organizer_email", models.EmailField(max_length=254)),
                ("participants", models.JSONField(default=list)),
                ("recording_url", models.URLField(blank=True)),
                ("transcript_url", models.URLField(blank=True)),
                ("has_recording", models.BooleanField(default=False)),
                ("has_transcript", models.BooleanField(default=False)),
                ("summary", models.TextField(blank=True)),
                ("action_items", models.JSONField(default=list)),
                ("key_topics", models.JSONField(default=list)),
                ("follow_up_emails", models.JSONField(default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("transcription_completed", models.BooleanField(default=False)),
                ("summary_generated", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="meetings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-scheduled_start"],
            },
        ),
        migrations.CreateModel(
            name="UserPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "default_tone",
                    models.CharField(
                        choices=[
                            ("professional", "Professional"),
                            ("friendly", "Friendly"),
                            ("casual", "Casual"),
                            ("formal", "Formal"),
                            ("concise", "Concise"),
                            ("detailed", "Detailed"),
                        ],
                        default="professional",
                        max_length=20,
                    ),
                ),
                ("signature", models.TextField(blank=True)),
                ("auto_categorize", models.BooleanField(default=True)),
                ("auto_generate_drafts", models.BooleanField(default=True)),
                ("category_rules", models.JSONField(default=dict)),
                ("notification_settings", models.JSONField(default=dict)),
                ("ai_confidence_threshold", models.FloatField(default=0.7)),
                ("learning_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="emailaccount",
            index=models.Index(
                fields=["user", "provider"], name="core_emaila_user_id_db3326_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailaccount",
            index=models.Index(
                fields=["email_address"], name="core_emaila_email_a_5f531e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="emailaccount",
            unique_together={("user", "email_address")},
        ),
        migrations.AddIndex(
            model_name="emailmessage",
            index=models.Index(
                fields=["account", "category"], name="core_emailm_account_7e01a9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailmessage",
            index=models.Index(
                fields=["account", "received_at"], name="core_emailm_account_4151ab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailmessage",
            index=models.Index(
                fields=["sender_email"], name="core_emailm_sender__1f124b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailmessage",
            index=models.Index(
                fields=["category", "priority"], name="core_emailm_categor_15c204_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="emailmessage",
            unique_together={("account", "message_id")},
        ),
        migrations.AddIndex(
            model_name="meeting",
            index=models.Index(
                fields=["user", "scheduled_start"],
                name="core_meetin_user_id_c2d804_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meeting",
            index=models.Index(
                fields=["platform", "status"], name="core_meetin_platfor_887a72_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meeting",
            index=models.Index(
                fields=["external_meeting_id"], name="core_meetin_externa_00bc19_idx"
            ),
        ),
    ]
